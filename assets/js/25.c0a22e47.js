(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{413:function(t,a,s){"use strict";s.r(a);var e=s(2),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"浏览器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#浏览器"}},[t._v("#")]),t._v(" 浏览器")]),t._v(" "),s("h2",{attrs:{id:"显示相关"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#显示相关"}},[t._v("#")]),t._v(" 显示相关")]),t._v(" "),s("h3",{attrs:{id:""}},[s("a",{staticClass:"header-anchor",attrs:{href:"#"}},[t._v("#")])]),t._v(" "),s("h3",{attrs:{id:"白屏"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#白屏"}},[t._v("#")]),t._v(" 白屏")]),t._v(" "),s("p",[t._v("目前大部分的前端框架都是JS驱动，所以在JS代码解析完成之前页面不会展示任何内容，也就是所谓的白屏。")]),t._v(" "),s("p",[t._v("解决方法：")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("SSR")])]),t._v(" "),s("li",[s("p",[t._v("预渲染")])]),t._v(" "),s("li",[s("p",[t._v("骨架屏")])])]),t._v(" "),s("h3",{attrs:{id:"闪屏"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#闪屏"}},[t._v("#")]),t._v(" 闪屏")]),t._v(" "),s("p",[t._v("先引入一个实际案例：")]),t._v(" "),s("p",[t._v("如果现在需要一次性将大量数据插入到页面中：")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("ul id"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"container"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("ul"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 记录任务开始时间")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" now "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Date"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("now")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 插入十万条数据")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" total "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获取容器")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" ul "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'container'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将数据插入容器中")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" total"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" li "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createElement")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'li'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    li"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("innerText "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Math"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("random")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" total"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    ul"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("appendChild")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("li"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'JS运行时间：'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("Date"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("now")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" now"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'总运行时间：'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("Date"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("now")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" now"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// print: JS运行时间： 187")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// print: 总运行时间： 2844")]),t._v("\n")])])]),s("p",[t._v("对十万条数据进行循环操作，JS的运行时间为187ms，但是最终渲染完成的总时间为2844ms")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("在JS的eventLoop中，当JS引擎所管理的执行栈中的事件以及所有微任务事件全部执行完后，才会触发渲染线程对页面进行渲染。")])]),t._v(" "),s("li",[s("p",[t._v("第一个log的触发时间是在页面渲染前，此时得到的时间是JS运行所需要的时间")])]),t._v(" "),s("li",[s("p",[t._v("第二个log的触发时间是在渲染完成，下一个eventloop中执行的")])])]),t._v(" "),s("p",[t._v("所以为了解决页面卡顿的问题，考虑采用渲染过程分批进行")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("ul id"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"container"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("ul"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//需要插入的容器")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" ul "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'container'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 插入十万条数据")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" total "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 一次插入 20 条")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" once "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//总页数")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" page "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" total"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("once\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//每条记录的索引")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" index "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//循环加载数据")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("loop")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("curTotal"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("curIndex")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("curTotal "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//每页多少条")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" pageCount "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Math"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("min")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("curTotal "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" once"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" pageCount"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" li "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createElement")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'li'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            li"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("innerText "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" curIndex "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("' : '")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Math"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("random")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" total"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            ul"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("appendChild")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("li"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("loop")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("curTotal "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" pageCount"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("curIndex "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" pageCount"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("loop")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("total"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("index"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("我们可以看到，页面加载的时间已经非常快了，每次刷新时可以很快的看到第一屏的所有数据，但是当我们快速滚动页面的时候，会发现页面出现闪屏或白屏的现象")]),t._v(" "),s("h4",{attrs:{id:"为什么会出现闪屏现象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#为什么会出现闪屏现象"}},[t._v("#")]),t._v(" 为什么会出现闪屏现象")]),t._v(" "),s("p",[t._v("关于 FPS 和时间切片需要维持 16.7ms 的原因：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("FPS 表示的是每秒钟画面更新次数，而所谓连续画面都是由一幅幅静止画面组成的，每幅画面称为一帧，FPS 是描述帧变化速度的物理量")])]),t._v(" "),s("li",[s("p",[t._v("大多数电脑显示器的刷新频率是 60Hz，大概相当于每秒钟重绘 60 次，FPS 为 60frame/s，其设定受屏幕分辨率、屏幕尺寸和显卡的影响")])]),t._v(" "),s("li",[s("p",[t._v("大多显示器也会以每秒 60 次的频率正在不断的更新屏幕上的图像，但由于人的眼睛有视觉停留效应，即前一副画面留在大脑的印象还没消失，紧接着后一副画面就跟上来了，这中间只间隔了 16.7ms(1000/60≈16.7)，所以会让你误以为屏幕上的图像是静止不动的")])]),t._v(" "),s("li",[s("p",[t._v("但刷新频率变成 1 次/秒，屏幕上的图像就会出现严重的闪烁，这样就很容易引起眼睛疲劳、酸痛和头晕目眩等症状，大多数浏览器都会对重绘操作加以限制，不超过显示器的重绘频率，因为即使超过那个频率用户体验也不会有提升")])]),t._v(" "),s("li",[s("p",[t._v("因此，最平滑动画的最佳循环间隔是 1000ms/60 即约等于 16.7ms")])])]),t._v(" "),s("p",[t._v("setTimeout 导致闪屏出现是因为 setTimeout 的执行步调和屏幕的刷新步调不一致，而导致后者的原因如下：")]),t._v(" "),s("ul",[s("li",[t._v("setTimeout 的执行时间并不是确定的：在 JS 中，setTimeout 任务被放进事件队列中，只有主线程执行完才会去检查事件队列中的任务是否需要执行，因此 setTimeout 的实际执行时间可能会比其设定的时间晚一些")]),t._v(" "),s("li",[t._v("刷新频率受屏幕分辨率和屏幕尺寸的影响，因此不同设备的刷新频率可能会不同，而 setTimeout 只能设置一个固定时间间隔，这个时间不一定和屏幕的刷新时间相同")])]),t._v(" "),s("p",[t._v("在 setTimeout 中对 dom 进行操作，必须要等到屏幕下次绘制时才能更新到屏幕上，如果两者步调不一致，就可能导致中间某一帧的操作被跨越过去，而直接更新下一帧的元素，从而导致丢帧现象")]),t._v(" "),s("p",[t._v("参考：https://juejin.cn/post/6844903938894872589")]),t._v(" "),s("h3",{attrs:{id:"预渲染"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#预渲染"}},[t._v("#")]),t._v(" 预渲染")]),t._v(" "),s("p",[t._v("所谓预渲染，就是在项目构建过程中，通过一些渲染机制将页面在构建的过程中就渲染好，然后插入到html中，这样在页面启动之前首先看到的就是预渲染的页面了。")]),t._v(" "),s("p",[t._v("如使用"),s("code",[t._v("prerender-spa-plugin")]),t._v("，但是该方案最终也抛弃了，预渲染渲染的页面数据是在构建过程中就已经打包到了 html 中， 当真实访问页面的时候，真实数据可能已经和预渲染的数据有了很大的出入，而且预渲染的页面也是一个不可交互的页面，在页面没有启动之前，用户无法和预渲染的页面进行任何交互，预渲染页面中的数据反而会影响到用户获取真实的信息，当涉及到一些价格、金额、地理位置的地方甚至会导致用户做出一些错误的决定")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("动态数据无法展示，不同的用户看到的都是同样的页面")])]),t._v(" "),s("li",[s("p",[t._v("路由很多时，代码构建时间太长")])]),t._v(" "),s("li",[s("p",[t._v("用户容易误操作，由于预渲染时 js 还没有加载，因此展示出来的内容没有 js 的交互逻辑，比如按钮点击，在 js 加载完成之前用户点击是没有反应的")])]),t._v(" "),s("li",[s("p",[t._v("预加载内容很少，当页面有内容是依赖动态数据加载时，在编译时是无法加载出动态数据的，因此会导致这部分内容编译不出来")])])]),t._v(" "),s("p",[t._v("预渲染比较适合静态或者变化不大的页面，能够通过部署前的一次静态渲染，将页面上大部分内容都渲染出来。这样搜索引擎在爬取的时候，就能够爬到相关的内容信息。")]),t._v(" "),s("h3",{attrs:{id:"ssr"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ssr"}},[t._v("#")]),t._v(" SSR")]),t._v(" "),s("p",[t._v("暂留空")]),t._v(" "),s("h2",{attrs:{id:"渲染流程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#渲染流程"}},[t._v("#")]),t._v(" 渲染流程")]),t._v(" "),s("h3",{attrs:{id:"构建dom树"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#构建dom树"}},[t._v("#")]),t._v(" 构建DOM树")]),t._v(" "),s("p",[t._v("因为浏览器无法直接理解和使用HTML，所以要转为DOM树，浏览器才能使用。")]),t._v(" "),s("p",[t._v("HTML解析：接收到HTML字节流时，首先要经过渲染引擎的HTML解析器，将HTML字节流转换为DOM树结构。")]),t._v(" "),s("p",[t._v("流程：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("将接收到的字节流根据文件的指定编码，转换为HTML元素")])]),t._v(" "),s("li",[s("p",[t._v("分词器将转化后的数据转换成Token")])]),t._v(" "),s("li",[s("ul",[s("li",[t._v("Token的类别：Tag Token和文本Token")])])]),t._v(" "),s("li",[s("p",[t._v("根据Token生成DOM树")])]),t._v(" "),s("li",[s("ul",[s("li",[t._v("HTML解析器在刚开始时，会默认创建一个根节点为document的空DOM结构，并将startTag docuemnt的Token压入栈中")]),t._v(" "),s("li",[t._v("当遇到文本Token时，会向DOM结构中添加一个文本节点，但不会放入栈中")])])]),t._v(" "),s("li",[s("ul",[s("li",[t._v("当遇到一个startTag token，会创建一个对应的dom节点，插入DOM结构，并且将startTag token压入栈")]),t._v(" "),s("li",[t._v("当遇到一个endTag token时，HTML解析器会查看栈顶的token是不是对应的startTag token，如果是则弹出，表示元素解析完毕")])])]),t._v(" "),s("li",[s("ul",[s("li",[t._v("直到最后document的endTag token出栈，整个文件解析完")])])])]),t._v(" "),s("p",[t._v("整个DOM树的构建过程其实就是： 字节 -> 字符 -> 令牌 -> 节点对象 -> 对象模型")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2021/webp/22799595/1640865240279-5f3ce4a7-bd17-4ae2-8287-e077c07329fd.webp",alt:"img"}})]),t._v(" "),s("h3",{attrs:{id:"脚本下载与执行"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#脚本下载与执行"}},[t._v("#")]),t._v(" 脚本下载与执行")]),t._v(" "),s("p",[t._v("构建DOM过程中，如果遇到"),s("code",[t._v("<script>")]),t._v("标签，渲染引擎会停止对HTML的解析，而去加载执行JS代码，原因在于JS代码可能会改变DOM的结构。")]),t._v(" "),s("p",[t._v("但是如果在"),s("code",[t._v("script")]),t._v("标签上添加了"),s("code",[t._v("async")]),t._v("或"),s("code",[t._v("defer")]),t._v("等属性，浏览器会异步加载和执行JS代码，而不会阻塞渲染。")]),t._v(" "),s("h3",{attrs:{id:"样式计算"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#样式计算"}},[t._v("#")]),t._v(" 样式计算")]),t._v(" "),s("p",[t._v("关于CSS样式，它的来源一般是三种：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("link标签引用")])]),t._v(" "),s("li",[s("p",[t._v("style标签中的样式")])]),t._v(" "),s("li",[s("p",[t._v("元素的内嵌style属性")])])]),t._v(" "),s("h4",{attrs:{id:"格式化样式表"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#格式化样式表"}},[t._v("#")]),t._v(" 格式化样式表")]),t._v(" "),s("p",[t._v("首先，浏览器是无法直接识别CSS样式文本的，因此渲染引擎接收到CSS文本之后就是将其转化为一个格式化的对象，即styleSheets")]),t._v(" "),s("h4",{attrs:{id:"标准化样式属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#标准化样式属性"}},[t._v("#")]),t._v(" 标准化样式属性")]),t._v(" "),s("p",[t._v("一些CSS样式不容易被渲染引擎所理解，因此需要在计算样式之前把它们标准化")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2021/webp/22799595/1640866319026-a301578e-a96d-45c6-9ca0-5363193bb1fd.webp",alt:"img"}})]),t._v(" "),s("h4",{attrs:{id:"计算每个节点的具体样式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#计算每个节点的具体样式"}},[t._v("#")]),t._v(" 计算每个节点的具体样式")]),t._v(" "),s("p",[t._v("样式被格式化和标准化之后，需要计算每个节点的具体样式信息。")]),t._v(" "),s("p",[t._v("**继承：**每个子节点会默认去继承父节点的样式，如果父节点中找不到，就会采取浏览器默认的样式，也叫"),s("code",[t._v("UserAgent")]),t._v("样式")]),t._v(" "),s("p",[s("strong",[t._v("层叠")])]),t._v(" "),s("p",[t._v("计算完成之后，所有的样式值会被挂载到"),s("code",[t._v("window.getComputedStyle")]),t._v("当中，也就可以通过JS来获取计算后的样式")]),t._v(" "),s("p",[t._v("原本DOM和CSS的构建是互不影响，井水不犯河水，但是一旦引入了JavaScript，CSS也开始阻塞DOM的构建，只有CSS构建完毕后，DOM再恢复DOM构建。")]),t._v(" "),s("p",[t._v("这是什么情况？")]),t._v(" "),s("p",[t._v("这是因为JavaScript不只是可以改DOM，它还可以更改样式，也就是它可以更改CSS。因为不完整的CSS是无法使用的，如果JavaScript想访问CSS并更改它，那么在执行JavaScript时，必须要能拿到完整的CSS。所以就导致了一个现象，如果浏览器尚未完成样式计算，而我们却想在此时运行脚本，那么浏览器将延迟脚本执行和DOM构建，直至其完成样式计算。也就是说，"),s("strong",[t._v("在这种情况下，浏览器会先下载和构建CSS，然后再执行JavaScript，最后在继续构建DOM")]),t._v("。")]),t._v(" "),s("h3",{attrs:{id:"生成布局树"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#生成布局树"}},[t._v("#")]),t._v(" 生成布局树")]),t._v(" "),s("p",[t._v("生成DOM树和DOM样式之后，接下来要做的就是通过浏览器的布局系统确定元素的位置，也就是要生成一个布局树")]),t._v(" "),s("p",[t._v("流程：")]),t._v(" "),s("ul",[s("li",[t._v("遍历生成的DOM树节点，添加到布局树中")]),t._v(" "),s("li",[t._v("计算布局树节点的坐标位置")])]),t._v(" "),s("p",[s("strong",[t._v("注：布局树仅包含可见元素，对于head标签和设置了display：none的元素将不会被放入其中。")])]),t._v(" "),s("p",[t._v("网络上其他博客会说先生产Render Tree，也就是渲染树，其实这还是十几年前的事情了，现在Chrome团队做了大量重构，没有Render Tree的过程了，布局树的信息非常完善，具有了Render Tree的功能")]),t._v(" "),s("p",[t._v("图示：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2021/webp/22799595/1640867459012-8f60e347-978e-416e-975e-265bf80826c2.webp",alt:"img"}})]),t._v(" "),s("h3",{attrs:{id:"绘制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#绘制"}},[t._v("#")]),t._v(" 绘制")]),t._v(" "),s("p",[t._v("布局Layout之后，知道了不同元素的结构，样式，几何信息，我们要绘制一个页面需要知道每个元素的绘制先后顺序，主线程会遍历布局树，生产绘画记录paint records。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2021/webp/22799595/1640867935378-68a62aa8-e7a4-4374-bc72-c60f85bc988f.webp",alt:"img"}})]),t._v(" "),s("h3",{attrs:{id:"合成composite"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#合成composite"}},[t._v("#")]),t._v(" 合成Composite")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2021/webp/22799595/1640697864227-f33f7db8-0cae-4bf1-95b9-de7499bea648.webp",alt:"img"}})]),t._v(" "),s("p",[t._v("在Paint阶段，会调用引擎的paint api进行像素级信息计算和绘制，像素级信息具体表现为帧信息（图层），浏览器会将各层的信息发送给GPU，GPU会将各层合成——composite，显示在屏幕上。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2021/png/22799595/1640779612444-96cfa0d1-3280-473a-bbe4-84ea66199be5.png",alt:"img"}})]),t._v(" "),s("h4",{attrs:{id:"layout-object"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#layout-object"}},[t._v("#")]),t._v(" Layout Object")]),t._v(" "),s("p",[t._v("从浏览器的渲染过程中，可以看到HTML会被解析为DOM树，但是DOM树里面的DOM是提供给JS/HTML/CSS用的，并不能直接拿过来在页面或者位图里绘制。因此浏览器内部实现了"),s("strong",[t._v("Layout Object，旧版称之为Render Object")])]),t._v(" "),s("p",[s("strong",[t._v("每个Layout Object和DOM节点一一对应。Layout Object上实现了将其对应的DOM节点绘制进位图的方法，负责绘制这个DOM节点的可见内容如背景、边框等。Layout Object也是存放在一个树形结构中")]),t._v("。")]),t._v(" "),s("p",[t._v("虽然每个渲染对象实现了绘制每个DOM节点的方法，但并不是把这颗树进行简单遍历然后依次执行绘制方法就可以完成绘制，因为浏览器中还存在这重叠上下文，就是决定元素间相互覆盖（比如z-index）的东西。使得文档流中位置靠前位置的元素有可能覆盖靠后的元素。")]),t._v(" "),s("h4",{attrs:{id:"paint-layer"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#paint-layer"}},[t._v("#")]),t._v(" Paint Layer")]),t._v(" "),s("p",[t._v("旧版称之为"),s("strong",[t._v("RenderLayer。")])]),t._v(" "),s("p",[t._v("处于相同坐标空间（z轴空间）的渲染对象，都将归并到同一个渲染层中，因此根据层叠上下文，不同坐标空间的渲染对象将形成多个渲染层，以体现它们的层叠关系。")]),t._v(" "),s("p",[t._v("所以，对于满足形成层叠上下文条件的渲染对象，浏览器会为其创建新的渲染层。能够导致浏览器为其创建新的渲染层的，包括以下几类常见的情况：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("根元素 document")])]),t._v(" "),s("li",[s("p",[t._v("有明确的定位属性（relative、fixed、sticky、absolute）")])]),t._v(" "),s("li",[s("p",[t._v("opacity < 1")])]),t._v(" "),s("li",[s("p",[t._v("有 CSS fliter 属性")])]),t._v(" "),s("li",[s("p",[t._v("有 CSS mask 属性")])]),t._v(" "),s("li",[s("p",[t._v("有 CSS mix-blend-mode 属性且值不为 normal")])]),t._v(" "),s("li",[s("p",[t._v("有 CSS transform 属性且值不为 none")])]),t._v(" "),s("li",[s("p",[t._v("backface-visibility 属性为 hidden")])]),t._v(" "),s("li",[s("p",[t._v("有 CSS reflection 属性")])]),t._v(" "),s("li",[s("p",[t._v("有 CSS column-count 属性且值不为 auto或者有 CSS column-width 属性且值不为 auto")])]),t._v(" "),s("li",[s("p",[t._v("当前有对于 opacity、transform、fliter、backdrop-filter 应用动画")])]),t._v(" "),s("li",[s("p",[t._v("overflow 不为 visible")])])]),t._v(" "),s("p",[t._v("DOM 节点和渲染对象是一一对应的，满足以上条件的渲染对象就能拥有独立的渲染层。当然这里的独立是不完全准确的，并不代表着它们完全独享了渲染层，由于不满足上述条件的渲染对象将会与其第一个拥有渲染层的父元素共用同一个渲染层，因此实际上，这些渲染对象会与它的部分子元素共用这个渲染层。")]),t._v(" "),s("p",[s("strong",[t._v("Layer树决定了网页绘制的层次顺序，而从属于PaintLayer的LayerObject决定了这个Layer的内容，所以有的PaintLayer和LayerObject一起就决定了网页在屏幕上最终呈现出来的内容。")])]),t._v(" "),s("h4",{attrs:{id:"compositing-layer"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#compositing-layer"}},[t._v("#")]),t._v(" Compositing Layer")]),t._v(" "),s("p",[t._v("上述的过程可以搞定绘制，但是浏览器中经常有动画和3d的css等东西，这意味着页面在有这些元素时，页面显示会经常变动，也就意味着位图会经常变动，每次重绘整个绘图的开销是非常大的。")]),t._v(" "),s("p",[t._v("因此浏览器为了优化这一过程，引出了Graphics Layer，也称为Compositing Layer，——合成层。")]),t._v(" "),s("p",[t._v("某些具有CSS3的3D transform的元素、在opacity、transform属性上具有动画的元素、硬件加速的canvas和video等等，这些元素在上一步会提升为Paint Layer，而现在他们会提升为合成层。")]),t._v(" "),s("p",[t._v("而其它没有被提升的每个Paint Layer都属于他祖先中最近的那个合成层。")]),t._v(" "),s("p",[t._v("一个渲染层满足以下任一条件才会被提升为合成层：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("3D transforms：translate3d、translateZ 等")])]),t._v(" "),s("li",[s("p",[t._v("video、canvas、iframe 等元素")])]),t._v(" "),s("li",[s("p",[t._v("通过 Element.animate() 实现的 opacity 动画转换")])]),t._v(" "),s("li",[s("p",[t._v("通过 СSS 动画实现的 opacity 动画转换")])]),t._v(" "),s("li",[s("p",[t._v("position: fixed")])]),t._v(" "),s("li",[s("p",[t._v("具有 will-change 属性")])]),t._v(" "),s("li",[s("p",[t._v("对 opacity、transform、fliter、backdropfilter 应用了 animation 或者 transition")])])]),t._v(" "),s("h4",{attrs:{id:"graphics-context"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#graphics-context"}},[t._v("#")]),t._v(" Graphics Context")]),t._v(" "),s("p",[t._v("Graphics Context又称为图形上下文，它负责输出该层的位图，内存中的位图最终作为纹理上传到GPU，最后GPU将多层纹理进行合成，同时在纹理合成时对于每一层纹理都可以指定不同的合成参数，从而实现对纹理进行transform、mask、opacity等操作之后再合成。")]),t._v(" "),s("h4",{attrs:{id:"隐式合成"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#隐式合成"}},[t._v("#")]),t._v(" 隐式合成")]),t._v(" "),s("p",[t._v("满足某些显性的特殊条件时，渲染层会被浏览器提示为合成层。")]),t._v(" "),s("p",[t._v("除此之外，浏览器在Composite阶段还存在一种隐式合成。")]),t._v(" "),s("p",[t._v("例：")]),t._v(" "),s("p",[t._v("两个absolute定位的div在屏幕上交叠，根据z-index的关系，其中一个div会覆盖在另一个div上。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2021/webp/22799595/1640778393886-4e49ca61-c664-4f1f-8199-754c9e682f7e.webp",alt:"img"}})]),t._v(" "),s("p",[t._v("如果此时下方的div加上了css属性："),s("code",[t._v("transform:translazeZ(0)")]),t._v("，就会被浏览器提升为合成层，提升后的合成层位于Document上，假如没有隐式合成，原本应该处于上方的div就依然还是跟Document共用一个GraphicsLayer，层级反而下降，出现了层叠关系错乱的问题。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2021/webp/22799595/1640778525105-58a41344-5f27-4605-855f-069f3c976ea7.webp",alt:"img"}})]),t._v(" "),s("p",[t._v("所以为了纠正错误的层叠关系，浏览器让原本应该盖在上面的渲染层也同时提升为合成层。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2021/webp/22799595/1640778560034-a45e2e1b-f841-48f4-bb88-8f6700f3fe99.webp",alt:"img"}})]),t._v(" "),s("h4",{attrs:{id:"层爆炸"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#层爆炸"}},[t._v("#")]),t._v(" 层爆炸")]),t._v(" "),s("p",[t._v("在平时开发的过程中，我们很少去关注层合成的问题，很容易就产生一些不在预期范围内的合成层，当这些不符合预期的合成层达到一定数量级时，就会变成层爆炸。层爆炸会占用GPU和大量的内存资源，严重损耗页面性能，因此盲目使用GPU加速可能会适得其反。")]),t._v(" "),s("h4",{attrs:{id:"层压缩"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#层压缩"}},[t._v("#")]),t._v(" 层压缩")]),t._v(" "),s("p",[t._v("为了应对层爆炸的问题，浏览器也有对应策略。")]),t._v(" "),s("p",[t._v("如果多个渲染层同一个合成层重叠时，这些渲染层会被压缩到一个Graphics Layer中。")]),t._v(" "),s("p",[t._v("例：")]),t._v(" "),s("p",[t._v("还是之前的模型，只不过这次不同的是，有四个 absolute 定位的 div 在屏幕内发生了交叠。此时处于最下方的 div 在加上了 CSS 属性 transform: translateZ(0) 后被浏览器提升为合成层，如果按照隐式合成的原理，盖在它上边的 div 会提升为一个新的合成层，第三个 div 又盖在了第二个上，自然也会被提升为合成层，第四个也同理。这样一来，岂不是就会产生四个合成层了")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2021/webp/22799595/1640779129004-0506e089-eb07-46b6-b2d6-74258e34b5a4.webp",alt:"img"}})]),t._v(" "),s("p",[t._v("然而浏览器会隐式地把多个渲染层压缩到同一个GraphicsLayer中进行，也就是说上方的三个div最终会处于同一个合成层中，这就是浏览器的层压缩。")]),t._v(" "),s("h4",{attrs:{id:"性能优化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#性能优化"}},[t._v("#")]),t._v(" 性能优化")]),t._v(" "),s("p",[t._v("提升为合成层有以下几点好处：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("合成层的位图，会交给GPU合成，比CPU快很多")])]),t._v(" "),s("li",[s("p",[t._v("当需要repaint时，只需要repaint本身而不会影响到其他层")])]),t._v(" "),s("li",[s("p",[t._v("对于transform和opacity，不会触发layout和paint")])])]),t._v(" "),s("h4",{attrs:{id:"建议"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#建议"}},[t._v("#")]),t._v(" 建议")]),t._v(" "),s("p",[s("strong",[t._v("提升动画效果的元素")])]),t._v(" "),s("p",[t._v("合成层的好处是不会影响到其他元素的绘制，因此为了减少动画元素对其他元素的影响，从而减少paint，我们需要把动画提升为合成层。")]),t._v(" "),s("p",[t._v("提升合成层最好的方式是使用css的will-change属性。")]),t._v(" "),s("p",[t._v("will-change 设置为 opacity、transform、top、left、bottom、right 可以将元素提升为合成层。")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("#target "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  will"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("change"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" transform"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("不兼容will-change的浏览器可以使用以下方法")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("#target "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  transform"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("translateZ")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("但需要注意的是，不要创建太多的渲染层。因为每创建一个渲染层就意味着新的内存分配和更复杂的层管理。")]),t._v(" "),s("p",[s("strong",[t._v("使用transform或者opacity来实现动画效果")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2021/png/22799595/1640780270558-5d8c397b-9557-43ab-be23-bf7b4c845e44.png",alt:"img"}})]),t._v(" "),s("p",[t._v("从性能方面考虑，最理想的渲染流水线是没有布局和绘制环节的，只需要做合成层合并即可。")]),t._v(" "),s("p",[t._v("为了实现上述效果，就需要只使用那些仅触发Composite的属性。目前只有两个属性是满足该条件的：transform和opacity")]),t._v(" "),s("p",[s("strong",[t._v("减少绘制区域")])]),t._v(" "),s("p",[t._v("对于不需要重新绘制的区域应该尽量避免绘制，以减少绘制区域，比如一个顶部固定不变的header，在页面内容某个区域repaint时，整个屏幕包括header也会被重绘。")]),t._v(" "),s("p",[t._v("因此可以把header提升为合成层以减少该区域的绘制。")]),t._v(" "),s("h3",{attrs:{id:"总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2021/webp/22799595/1640867788562-606bb12e-b4ee-4736-b52c-d0b7dd0082fe.webp",alt:"img"}})]),t._v(" "),s("h3",{attrs:{id:"回流-重绘"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#回流-重绘"}},[t._v("#")]),t._v(" 回流 重绘")]),t._v(" "),s("h4",{attrs:{id:"回流"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#回流"}},[t._v("#")]),t._v(" 回流")]),t._v(" "),s("p",[t._v("渲染对象在创建完成并添加到渲染树时，只是将DOM节点和它对应的样式结合起来，并不包含位置和大小信息。所以需要layout这一过程计算他们的大小和位置，这一过程称为回流")]),t._v(" "),s("h4",{attrs:{id:"重绘"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#重绘"}},[t._v("#")]),t._v(" 重绘")]),t._v(" "),s("p",[t._v("通过构造渲染树和回流阶段，知道了哪些节点是可见的，以及可见节点的样式和具体的几何信息（位置、大小），那么我们就可以将渲染树的每个节点都转换为屏幕上的实际像素，整个过程叫重绘。")]),t._v(" "),s("p",[t._v("在重绘阶段，系统会遍历渲染树，并调用渲染对象的paint方法。")]),t._v(" "),s("h4",{attrs:{id:"何时发生"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#何时发生"}},[t._v("#")]),t._v(" 何时发生")]),t._v(" "),s("p",[t._v("回流这一阶段主要是计算节点的位置和几何信息，那么当页面布局和几何信息发生变化时，就需要回流。比如：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("添加或删除可见的DOM元素")])]),t._v(" "),s("li",[s("p",[t._v("元素的位置发生变化")])]),t._v(" "),s("li",[s("p",[t._v("元素的尺寸发生变化")])]),t._v(" "),s("li",[s("p",[t._v("内容发生变化，比如文本变化或图片被另一个不同尺寸的图片代替")])]),t._v(" "),s("li",[s("p",[t._v("页面一开始渲染时")])]),t._v(" "),s("li",[s("p",[t._v("浏览器窗口尺寸变化")])])]),t._v(" "),s("p",[s("strong",[t._v("注：回流一定触发重绘，重绘不一定会回流")])]),t._v(" "),s("h4",{attrs:{id:"浏览器的优化机制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#浏览器的优化机制"}},[t._v("#")]),t._v(" 浏览器的优化机制")]),t._v(" "),s("p",[t._v("由于每次重排都会造成额外的计算消耗，因此大多数浏览器都会通过队列化修改并批量执行来优化该过程。")]),t._v(" "),s("p",[t._v("浏览器会将修改操作放入到队列里，直到过了一段时间或操作达到了一个阈值才清空队列。但是，**当访问布局信息进行操作时，会强制刷新队列，**比如：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("offsetTop、offsetLeft、offsetWidth、offsetHeight")])]),t._v(" "),s("li",[s("p",[t._v("scrollTop、scrollLeft、scrollWidth、scrollHeight")])]),t._v(" "),s("li",[s("p",[t._v("clientTop、clientLeft、clientWidth、clientHeight")])]),t._v(" "),s("li",[s("p",[t._v("getComputedStyle()")])]),t._v(" "),s("li",[s("p",[t._v("getBoundingClientRect")])])]),t._v(" "),s("p",[t._v("以上属性和方法都需要返回最新的布局信息，因此浏览器不得不清空队列，触发回流重绘来返回正确的值。")]),t._v(" "),s("h4",{attrs:{id:"如何减少回流重绘"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何减少回流重绘"}},[t._v("#")]),t._v(" 如何减少回流重绘")]),t._v(" "),s("p",[t._v("如果我们不停地改变页面的布局，就会造成浏览器耗费大量的开销在进行页面的计算。")]),t._v(" "),s("p",[s("strong",[t._v("减少强制同步布局")])]),t._v(" "),s("p",[t._v("避免频繁读取会引发回流/重绘的属性，如果确实需要多次使用就用一个变量缓存起来。")]),t._v(" "),s("p",[t._v("比如以下属性和方法，浏览器会立刻清空队列")]),t._v(" "),s("p",[t._v("读写offset家族，scroll家族，client家族属性，以及getComputedStyle方法和getBoundingClientRect方法")]),t._v(" "),s("p",[s("strong",[t._v("避免频繁操作DOM")])]),t._v(" "),s("p",[t._v("可以创建一个documentFragment，DOM操作都在documentFragment上执行，最后把他挂载到父节点")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" container "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'container'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" content "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createDocumentFragment")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" li "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createElement")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"li"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  li"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("innerHTML "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'li'")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("i\n  content"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("appendChild")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("li"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\ncontainer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("appendChild")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("content"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("也可以先为元素设置 display: none，操作结束后再把它显示出来。因为在 display 属性为 none 的元素上进行的 DOM 操作不会引发回流和重绘")]),t._v(" "),s("p",[s("strong",[t._v("对于复杂的动画，使用绝对定位使其脱离文档流")])]),t._v(" "),s("p",[s("strong",[t._v("使用css3硬件加速")])]),t._v(" "),s("p",[s("strong",[t._v("避免使用table布局")])]),t._v(" "),s("p",[t._v("因为 table 中某个元素旦触发了 reflow，那么整个 table 的元素都会触发 reflow。那么在不得已使用 table 的场合，可以设置 table-layout:auto;或者是 table-layout:fixed 这样可以让 table 一行一行的渲染，这种做法也是为了限制 reflow 的影响范围")]),t._v(" "),s("h3",{attrs:{id:"补充"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#补充"}},[t._v("#")]),t._v(" 补充")]),t._v(" "),s("p",[t._v("当我们输入一个页面地址时,发生了什么")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("浏览器先下载该地址所对应的html页面")])]),t._v(" "),s("li",[s("p",[t._v("浏览器解析html页面的DOM结构")])]),t._v(" "),s("li",[s("p",[t._v("开启下载线程对文档中的所有资源按优先级排序下载")])]),t._v(" "),s("li",[s("p",[t._v("主线程继续解析文档,到达head节点,head里的外部资源无非是外链样式表和外链js")])])]),t._v(" "),s("ul",[s("li",[s("ul",[s("li",[t._v("发现有外链css或外链js,如果是外链js则停止解析后续内容,等待该资源下载,下载完毕后立刻执行.")]),t._v(" "),s("li",[t._v("如果是外链css,解析解析后续内容")])])])]),t._v(" "),s("ol",[s("li",[t._v("解析到body")])]),t._v(" "),s("p",[t._v("body里的情况比较多,body里可能只有dom元素,可能既有dom,也有css,js等资源,js资源又可能异步加载")]),t._v(" "),s("ul",[s("li",[s("p",[s("strong",[t._v("只有DOM元素")])])]),t._v(" "),s("li",[s("ul",[s("li",[t._v("这种情况比较简单,DOM树构建完,页面首次渲染")])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("只有DOM元素和外链js")])])]),t._v(" "),s("li",[s("ul",[s("li",[t._v("当解析到外链js的时候,该js尚未下载到本地,则js之前的DOM会被渲染到页面上,同时js会阻塞后面DOM的构建.所以在js执行完之前,我们在页面上看不到该js后面的DOM元素")])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("有DOM元素和外链css")])])]),t._v(" "),s("li",[s("ul",[s("li",[t._v("外链css不会影响css后面的DOM构建,但是会阻碍渲染,简单说,外链css加载完之前,页面还是白屏")])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("有DOM元素,外链js,外链css")])])]),t._v(" "),s("li",[s("ul",[s("li",[t._v("外链js和外链css的顺序会影响页面渲染.当body中js之前的外链css未加载完之前,页面不会被渲染")]),t._v(" "),s("li",[t._v("当body中js之前的外链css加载完毕后,js之前的DOM树和css合并然后进行第一次渲染")])])])]),t._v(" "),s("ol",[s("li",[t._v("文档解析完毕.当页面引用的所有JS"),s("strong",[t._v("同步代码")]),t._v("执行完毕,触发"),s("code",[t._v("DOMContentLoaded")]),t._v("事件")]),t._v(" "),s("li",[t._v("html文档中的图片资源,js代码中有异步加载的css js 图片资源都加载完毕之后,"),s("code",[t._v("load")]),t._v("事件触发")])]),t._v(" "),s("h4",{attrs:{id:"head中资源的加载"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#head中资源的加载"}},[t._v("#")]),t._v(" head中资源的加载")]),t._v(" "),s("ul",[s("li",[t._v("head中js资源加载都会停止后面DOM的构建,但是不影响后面资源的下载")]),t._v(" "),s("li",[t._v("css资源不会阻碍后面DOM的构建,但是会阻碍页面的首次渲染")])]),t._v(" "),s("h4",{attrs:{id:"body中资源的加载"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#body中资源的加载"}},[t._v("#")]),t._v(" body中资源的加载")]),t._v(" "),s("ul",[s("li",[t._v("body中js资源加载都会停止后面DOM的构建,但是不影响后面资源的下载")]),t._v(" "),s("li",[t._v("css资源不会阻碍后面DOM的构建,但是会阻碍页面的首次渲染")])]),t._v(" "),s("h4",{attrs:{id:"domcontentloaded触发"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#domcontentloaded触发"}},[t._v("#")]),t._v(" DomContentLoaded触发")]),t._v(" "),s("p",[t._v("DOMContentLoaded 事件在 "),s("strong",[t._v("html文档加载完毕，并且 html 所引用的内联 js、以及外链 js 的同步代码都执行完毕后触发")])]),t._v(" "),s("h4",{attrs:{id:"load事件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#load事件"}},[t._v("#")]),t._v(" load事件")]),t._v(" "),s("p",[t._v("当页面 DOM 结构中的 js、css、图片，以及 js 异步加载的 js、css 、图片都加载完成之后，才会触发 load 事件。")]),t._v(" "),s("h4",{attrs:{id:"async和defer的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#async和defer的区别"}},[t._v("#")]),t._v(" async和defer的区别")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2021/webp/22799595/1640870858366-b3aab931-0aa1-4724-b603-ffe9ea10cb9e.webp",alt:"img"}})]),t._v(" "),s("p",[t._v("async 属性表示异步执行引入的 JavaScript，与 defer 的区别在于，如果已经加载好，就会开始执行——无论此刻是 HTML 解析阶段还是 DOMContentLoaded 触发之后。需要注意的是，这种方式加载的 JavaScript 依然会阻塞 load 事件。换句话说，async-script 可能在 DOMContentLoaded 触发之前或之后执行，但一定在 load 触发之前执行。")]),t._v(" "),s("p",[t._v("defer 属性表示延迟执行引入的 JavaScript，即这段 JavaScript 加载时 HTML 并未停止解析，这两个过程是并行的。整个 document 解析完毕且 defer-script 也加载完成之后（这两件事情的顺序无关），会执行所有由 defer-script 加载的 JavaScript 代码，然后触发 DOMContentLoaded 事件")]),t._v(" "),s("p",[t._v("defer 与相比普通 script：")]),t._v(" "),s("p",[s("strong",[t._v("载入 JavaScript 文件时不阻塞 HTML 的解析，执行阶段被放到 HTML 标签解析完成之后。")])]),t._v(" "),s("p",[s("strong",[t._v("在加载多个JS脚本的时候，async是无顺序的加载，而defer是有顺序的加载。")])]),t._v(" "),s("h2",{attrs:{id:"浏览器存储"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#浏览器存储"}},[t._v("#")]),t._v(" 浏览器存储")]),t._v(" "),s("h3",{attrs:{id:"cookie"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cookie"}},[t._v("#")]),t._v(" Cookie")]),t._v(" "),s("h4",{attrs:{id:"来源"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#来源"}},[t._v("#")]),t._v(" 来源")]),t._v(" "),s("p",[t._v('Cookie的本职工作并非是本地存储,而是"维护状态".')]),t._v(" "),s("p",[t._v("因为HTTP协议是无状态的,所以它不对请求和响应之间的通信状态进行保存,于是就诞生了Cookie.服务器可以设置或读取Cookie中包含的信息,借此维护用户跟服务器会话中的状态.")]),t._v(" "),s("p",[t._v("可以把Cookie理解成一个存储在浏览器里的一个小文本文件,它附着在HTTP请求上,在浏览器和服务器之间飞来飞去,它可以携带用户信息,当服务器检查Cookie时,便可以获取客户端的状态.")]),t._v(" "),s("h4",{attrs:{id:"应用场景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#应用场景"}},[t._v("#")]),t._v(" 应用场景")]),t._v(" "),s("p",[t._v("Cookie指某些网站为了辨别用户身份而存储在用户本地终端上的数据,Cookie是服务器生成,客户端进行维护和存储.")]),t._v(" "),s("p",[t._v("通过Cookie,可以让服务器知道请求是来源哪个客户端,就可以进行客户端状态的维护.")]),t._v(" "),s("p",[t._v("典型的应用场景有:")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("记住密码,下次自动登录")])]),t._v(" "),s("li",[s("p",[t._v("购物车功能")])]),t._v(" "),s("li",[s("p",[t._v("记录用户浏览数据,进行相关推荐")])])]),t._v(" "),s("h4",{attrs:{id:"原理和生成"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#原理和生成"}},[t._v("#")]),t._v(" 原理和生成")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2021/webp/22799595/1640955184060-5dad113f-2943-43c4-a510-822c71befc40.webp",alt:"img"}})]),t._v(" "),s("p",[t._v("第一次访问网站时,浏览器发出请求,服务器响应后会在响应头里添加一个Set-Cookie选项,将Cookie放入到响应请求中,在浏览器第二次发请求时,会通过Cookie请求头部将Cookie信息发送给服务器.")]),t._v(" "),s("p",[s("strong",[t._v("生成方式一:http response header中的set-cookie")])]),t._v(" "),s("p",[t._v("我们可以通过响应头中的set-cookie指定要存储的cookie值,默认情况下,domain被设置为cookie页面的主机名,也可以手动设置domain的值")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("Set"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Cookie"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" id"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("a3fWa"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" Expires"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("Wed"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("21")]),t._v(" Oct "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2018")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("07")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("28")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("00")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("GMT")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//可以指定一个特定的过期时间（Expires）或有效期（Max-Age）")]),t._v("\n")])])]),s("p",[t._v("当Cookie的过期时间被设定时,设定的日期和时间只与客户端相关,而不是服务端")]),t._v(" "),s("p",[s("strong",[t._v("生成方式二:js中可以通过document.cookie进行读写cookie")])]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("document"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cookie"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"userName=hello"')]),t._v("\ndocument"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cookie"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"gender=male"')]),t._v("\ndocument"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cookie"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'age=20;domain=.baidu.com'")]),t._v("\n")])])]),s("p",[s("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2021/webp/22799595/1640958104786-74a18559-f6fa-4f29-9c0b-9193802f5c6a.webp",alt:"img"}})]),t._v(" "),s("p",[s("strong",[t._v("Domain")]),t._v("标识指定了哪些域名可以接受该Cookie,没有设置domain的会自动绑定到执行语句的当前域")]),t._v(" "),s("h4",{attrs:{id:"缺陷"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#缺陷"}},[t._v("#")]),t._v(" 缺陷")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("Cookie不够大")])]),t._v(" "),s("li",[s("ul",[s("li",[t._v("Cookie的大小限制在4KB左右,对于复杂的存储需求是不够用的,当Cookie超过4KB时将被裁切.")]),t._v(" "),s("li",[t._v("各浏览器的cookie每一个大小为4K,所以4KB并不是一个域名下所有cookie共享,而是一个name的大小")])])]),t._v(" "),s("li",[s("p",[t._v("过多的Cookie带来性能浪费")])]),t._v(" "),s("li",[s("ul",[s("li",[t._v("同一个域名下的所有请求都会携带Cookie.对于静态文件的请求,携带cookie信息没有用,此时可以通过cdn的域名和主站的域名分开来解决")])])]),t._v(" "),s("li",[s("p",[t._v("HTTP中Cookie是明文传输,安全性成问题")])])]),t._v(" "),s("h4",{attrs:{id:"安全"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安全"}},[t._v("#")]),t._v(" 安全")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2021/webp/22799595/1640958434210-aaff314c-8e10-42c5-877a-0e509e3b2b26.webp",alt:"img"}})]),t._v(" "),s("p",[t._v("HttpOnly不支持读写,浏览器不允许脚本操作document.cookie去更改cookie,所以为了避免XSS攻击,通过JS的API无法访问带有HttpOnly标记的Cookie")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("Set"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Cookie"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" id"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("a3fWa"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" Expires"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("Wed"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("21")]),t._v(" Oct "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2015")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("07")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("28")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("00")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("GMT")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" Secure"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" HttpOnly\n")])])]),s("h3",{attrs:{id:"localstorage"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#localstorage"}},[t._v("#")]),t._v(" LocalStorage")]),t._v(" "),s("h4",{attrs:{id:"特点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#特点"}},[t._v("#")]),t._v(" 特点")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("保存的数据长期存在,下一次访问该网站时,网页可以直接读取以前保存的数据")])]),t._v(" "),s("li",[s("p",[t._v("大小为5M左右")])]),t._v(" "),s("li",[s("p",[t._v("仅在客户端使用,不和服务端通信")])]),t._v(" "),s("li",[s("p",[t._v("接口封装较好")])])]),t._v(" "),s("h4",{attrs:{id:"操作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#操作"}},[t._v("#")]),t._v(" 操作")]),t._v(" "),s("p",[t._v("localStorage保存的数据，以“键值对”的形式存在。也就是说，每一项数据都有一个键名和对应的值。")]),t._v(" "),s("p",[t._v("所有的数据都是以文本格式保存。")]),t._v(" "),s("p",[t._v("存入数据使用setItem方法。它接受两个参数，第一个是键名，第二个是保存的数据。")]),t._v(" "),s("p",[s("code",[t._v('localStorage.setItem("key","value");')])]),t._v(" "),s("p",[t._v("读取数据使用getItem方法。它只有一个参数，就是键名。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('var valueLocal = localStorage.getItem("key");\n')])])]),s("h4",{attrs:{id:"应用场景-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#应用场景-2"}},[t._v("#")]),t._v(" 应用场景")]),t._v(" "),s("p",[t._v("用它可以来存储一些内容稳定的资源，如图片内容丰富的电商网站会用它来存储Base64格式的图片字符串")]),t._v(" "),s("h3",{attrs:{id:"sessionstorage"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#sessionstorage"}},[t._v("#")]),t._v(" SessionStorage")]),t._v(" "),s("p",[t._v("sessionStorage保存的数据用于浏览器的一次会话，窗口关闭时数据被清空。")]),t._v(" "),s("p",[s("strong",[t._v("即便是相同域名下的两个页面，只要它们不在同一个浏览器窗口打开，那么sessionStorage无法共享。")])]),t._v(" "),s("p",[t._v("localStorage和cookie在所有同源窗口中都是共享的")]),t._v(" "),s("h3",{attrs:{id:"区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#区别"}},[t._v("#")]),t._v(" 区别")]),t._v(" "),s("ul",[s("li",[t._v("共同点：都保存在浏览器端，且都遵循同源策略")]),t._v(" "),s("li",[t._v("不同点：生命周期和作用域不同")])]),t._v(" "),s("h2",{attrs:{id:"安全-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安全-2"}},[t._v("#")]),t._v(" 安全")]),t._v(" "),s("h3",{attrs:{id:"xss"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#xss"}},[t._v("#")]),t._v(" XSS")]),t._v(" "),s("p",[t._v("即跨站脚本攻击：在你的浏览器中插入一段恶意JavaScript脚本，因为浏览器无法区分脚本是被恶意注入的还是正常的内容，它都会执行，况且HTML非常灵活，可以在任何时候对它进行修改，窃取你的隐私信息和冒充你的身份进行操作")]),t._v(" "),s("p",[t._v("用户是通过哪种方法“注入”恶意脚本的呢")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("来自用户的输入信息")])]),t._v(" "),s("li",[s("p",[t._v("来自第三方链接")])]),t._v(" "),s("li",[s("p",[t._v("URL参数")])]),t._v(" "),s("li",[s("p",[t._v("POST参数")])]),t._v(" "),s("li",[s("p",[t._v("Cookie(可能来自其他子域注入)")])])]),t._v(" "),s("h4",{attrs:{id:"分类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#分类"}},[t._v("#")]),t._v(" 分类")]),t._v(" "),s("p",[s("strong",[t._v("存储型")])]),t._v(" "),s("p",[t._v("攻击者事先将恶意代码上传或存储到漏洞服务器中，只要受害者浏览包含此恶意代码的页面就会执行恶意代码。这就意味着只要访问了这个页面的访客，都有可能执行这段恶意的脚本。")]),t._v(" "),s("p",[t._v("存储型XSS一般会出现在网站留言、评论、博客日志等交互处，恶意脚本存储到客户端或服务端的数据库中。")]),t._v(" "),s("p",[s("strong",[t._v("反射型")])]),t._v(" "),s("p",[t._v("反射性XSS一般是攻击者通过特定手法（如电子邮件），诱使用户去访问一个包含恶意代码的URL，当受害者点击这些专门设计的链接时，恶意的代码会在受害者主机的浏览器上执行。")]),t._v(" "),s("p",[t._v("对于访问者而言是一次性的，具体表现在我们把恶意脚本通过URL的方式传递给了服务器，而服务器不加处理地把脚本"),s("strong",[t._v("反射")]),t._v("回访问者的浏览器，而使浏览器执行相应的脚本。")]),t._v(" "),s("p",[t._v("要避免反射类型的XSS，必须需要后端的协调，后端解析前端数据时首先做相关字符串的检测和转义")]),t._v(" "),s("p",[t._v("此类XSS通常出现在网站的搜索栏、用户登录口等地方，常用来窃取客户端Cookies")]),t._v(" "),s("p",[t._v("反射型和存储型的区别是：存储型XSS的恶意代码存在数据库中，反射型XSS的恶意代码存在URL中")]),t._v(" "),s("p",[t._v("反射型XSS漏洞常见于通过URL传递参数的功能：如网站搜索、跳转等")]),t._v(" "),s("p",[t._v("由于需要用户主动打开恶意的URL才能生效，攻击者往往会结合多种手段诱导用户点击。")]),t._v(" "),s("p",[t._v("POST的内容也可以触发反射型XSS，只不过触发条件苛刻，需要构造表单提交页面。")]),t._v(" "),s("p",[s("strong",[t._v("DOM型")])]),t._v(" "),s("p",[t._v("DOM型XSS是基于DOM文档对象模型的,")]),t._v(" "),s("p",[t._v("攻击者构造出特殊的URL,其中包含恶意的JS代码块,用户打开该URL后浏览器会进行解析,取出URL中的恶意代码进行执行.")]),t._v(" "),s("p",[t._v("在此过程中代码会窃取用户数据并发送到攻击者的网站")]),t._v(" "),s("p",[t._v("DOM型和前两种XSS的区别:DOM型XSS攻击中,取出和执行恶意代码由浏览器完成,属于前端JavaScript自身的安全漏洞,而其他两种XSS都属于服务端的安全漏洞.")]),t._v(" "),s("h4",{attrs:{id:"预防xss"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#预防xss"}},[t._v("#")]),t._v(" 预防XSS")]),t._v(" "),s("p",[t._v("XSS的攻击有两大要素:")]),t._v(" "),s("ul",[s("li",[t._v("攻击者提交恶意代码")]),t._v(" "),s("li",[t._v("浏览器执行恶意代码")])]),t._v(" "),s("p",[s("strong",[t._v("输入过滤")])]),t._v(" "),s("p",[t._v("如果由前端过滤输入，然后提交到后端的话。一旦攻击者绕过前端过滤，直接构造请求，就可以提交恶意代码了。")]),t._v(" "),s("p",[t._v("那么，如果后端在写入数据库前对输入进行过滤，然后就把“安全的”内容返回给前端。")]),t._v(" "),s("p",[t._v("例如一个正常的用户输入了"),s("code",[t._v("5<7")]),t._v("的内容，在写入数据库前被转义，变成了"),s("code",[t._v("5 < 7")]),t._v("。")]),t._v(" "),s("p",[t._v("但是，输入侧过滤虽然能够在某些情况下解决特定的XSS问题，但会引入很大的不确定性和乱码问题。")]),t._v(" "),s("p",[s("strong",[t._v("纯前端渲染")])]),t._v(" "),s("p",[t._v("过程：")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("浏览器先加载一个静态HTML，此HTML中不包含任何跟业务相关的数据")])]),t._v(" "),s("li",[s("p",[t._v("然后浏览器执行HTML中的JavaScript")])]),t._v(" "),s("li",[s("p",[t._v("JavaScript通过Ajax加载业务数据，调用DOM API更新到页面上")])])]),t._v(" "),s("p",[t._v("在纯前端渲染中，我们会明确的告诉浏览器：下面要设置的内容是文本（.innerText），还是属性（.setAttribute），还是样式（.style）等等。浏览器不会被轻易的被欺骗，执行预期外的代码了。")]),t._v(" "),s("p",[s("strong",[t._v("预防DOM型XSS攻击")])]),t._v(" "),s("p",[t._v("DOM型XSS攻击，实际上就是网站前端JavaScript代码本身不够严谨，把不可信的数据当作代码执行了。")]),t._v(" "),s("p",[t._v("在使用 "),s("code",[t._v(".innerHTML")]),t._v("、"),s("code",[t._v(".outerHTML")]),t._v("、"),s("code",[t._v("document.write()")]),t._v("时要特别小心，不要把不可信的数据作为 HTML 插到页面上，而应尽量使用 "),s("code",[t._v(".textContent")]),t._v("、"),s("code",[t._v(".setAttribute()")]),t._v("等。")]),t._v(" "),s("p",[t._v("DOM 中的内联事件监听器，如 "),s("code",[t._v("location、onclick、onerror、onload、onmouseover")]),t._v(" 等，"),s("code",[t._v("a")]),t._v("标签的"),s("code",[t._v("href")]),t._v("属性，JavaScript 的"),s("code",[t._v("eval()")]),t._v("、"),s("code",[t._v("setTimeout()")]),t._v("、"),s("code",[t._v("setInterval()")]),t._v("等，都能把字符串作为代码运行。如果不可信的数据拼接到字符串中传递给这些 API，很容易 产生安全隐患，请务必避免。")]),t._v(" "),s("p",[s("strong",[t._v("拼接HTML时对其进行转义")])]),t._v(" "),s("h3",{attrs:{id:"csrf"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#csrf"}},[t._v("#")]),t._v(" CSRF")]),t._v(" "),s("p",[t._v("CSRF为跨站请求伪造：攻击者诱导受害者进入第三方网站，在第三方网站中，向被攻击网站发送跨站请求。利用受害者在被攻击网站已经获得的注册凭证，绕过后台的用户验证达到冒充用户，对攻击的网站执行某项操作的目的。")]),t._v(" "),s("p",[t._v("流程：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("受害者登录a.com，并保留了登录凭证（Cookie）。")])]),t._v(" "),s("li",[s("p",[t._v("攻击者引诱受害者访问了b.com。")])]),t._v(" "),s("li",[s("p",[t._v("b.com 向 a.com 发送了一个请求：a.com/act=xx。浏览器会携带Cookie")])]),t._v(" "),s("li",[s("p",[t._v("a.com接收到请求后，对请求进行验证，并确认是受害者的凭证，误以为是受害者自己发送的请求。")])]),t._v(" "),s("li",[s("p",[t._v("a.com以受害者的名义执行了act=xx。")])]),t._v(" "),s("li",[s("p",[t._v("攻击完成，攻击者在受害者不知情的情况下，冒充受害者，让a.com执行了自己定义的操作")])])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2022/webp/22799595/1641476282092-1b01d499-99b5-454c-b22c-ff96ef97a8b5.webp",alt:"img"}})]),t._v(" "),s("h4",{attrs:{id:"csrf特点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#csrf特点"}},[t._v("#")]),t._v(" CSRF特点")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("攻击者利用受害者在被攻击网站的登录凭证，冒充受害者提交操作，而不是直接窃取数据")])]),t._v(" "),s("li",[s("p",[t._v("整个过程攻击者并不能获取到受害者的登录凭证，仅仅是冒用")])]),t._v(" "),s("li",[s("p",[t._v("跨站请求可以用各种方式：图片URL、超链接、CORS、Form提交等等。部分请求方式可以直接嵌入在第三方论坛、文章中，难以进行追踪。")])])]),t._v(" "),s("h4",{attrs:{id:"预防csrf"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#预防csrf"}},[t._v("#")]),t._v(" 预防CSRF")]),t._v(" "),s("p",[t._v("CSRF通常从第三方网站发起")])])}),[],!1,null,null,null);a.default=n.exports}}]);